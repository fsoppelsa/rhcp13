heat_template_version: queens

description: Template file to add a swap partition to a node.

parameters:
  servers:
    type: json
  swap_partition_label:
    type: string
    description: Swap partition label
    default: 'swap1'

resources:
  SwapConfig:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: |
        #!/bin/bash
        set -eux
        swap_partition=$(realpath /dev/disk/by-label/$swap_partition_label)
        if [ -f "$swap_partition" ]; then
          swapon $swap_partition
          echo "$swap_partition swap swap defaults 0 0" >> /etc/fstab
        else
          echo "$swap_partition needs to be a valid path"
          echo "Check that $swap_partition_label is a valid partition label"
        fi
      inputs:
        - name: swap_partition_label
          description: Swap partition label
          default: 'swap1'


  ControllerDeployedServerSwapDeployment:
    type: OS::Heat::SoftwareDeploymentGroup
    properties:
      name: ControllerDeployedServerSwapDeployment
      config: {get_resource: SwapConfig}
      servers: {get_param: [servers, ControllerDeployedServer]}
      input_values:
        swap_partition_label: {get_param: swap_partition_label}
      actions: ["CREATE"]

  ComputeDeployedServerSwapDeployment:
    type: OS::Heat::SoftwareDeploymentGroup
    properties:
      name: ComputeDeployedServerSwapDeployment
      config: {get_resource: SwapConfig}
      servers: {get_param: [servers, ComputeDeployedServer]}
      input_values:
        swap_partition_label: {get_param: swap_partition_label}
      actions: ["CREATE"]

  BlockStorageDeployedServerSwapDeployment:
    type: OS::Heat::SoftwareDeploymentGroup
    properties:
      name: BlockStorageDeployedServerSwapDeployment
      config: {get_resource: SwapConfig}
      servers: {get_param: [servers, BlockStorageDeployedServer]}
      input_values:
        swap_partition_label: {get_param: swap_partition_label}
      actions: ["CREATE"]

  ObjectStorageDeployedServerSwapDeployment:
    type: OS::Heat::SoftwareDeploymentGroup
    properties:
      name: ObjectStorageDeployedServerSwapDeployment
      config: {get_resource: SwapConfig}
      servers: {get_param: [servers, ObjectStorageDeployedServer]}
      input_values:
        swap_partition_label: {get_param: swap_partition_label}
      actions: ["CREATE"]

  CephStorageDeployedServerSwapDeployment:
    type: OS::Heat::SoftwareDeploymentGroup
    properties:
      name: CephStorageDeployedServerSwapDeployment
      config: {get_resource: SwapConfig}
      servers: {get_param: [servers, CephStorageDeployedServer]}
      input_values:
        swap_partition_label: {get_param: swap_partition_label}
      actions: ["CREATE"]
